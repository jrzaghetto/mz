import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, a as validate_slots, b as space, e as element, t as text, w as query_selector_all, h as detach_dev, j as claim_space, c as claim_element, f as children, g as claim_text, k as attr_dev, l as add_location, o as insert_dev, p as append_dev, q as noop } from './client.3fef4702.js';

/* src/routes/contact.svelte generated by Svelte v3.32.3 */

const file = "src/routes/contact.svelte";

function create_fragment(ctx) {
	let t0;
	let p0;
	let t1;
	let t2;
	let br;
	let t3;
	let p1;
	let t4;
	let a;
	let t5;

	const block = {
		c: function create() {
			t0 = space();
			p0 = element("p");
			t1 = text("O site está em manutenção. Nos próximos dias estará 100%");
			t2 = space();
			br = element("br");
			t3 = space();
			p1 = element("p");
			t4 = text("Entre em contato através do e-mail: ");
			a = element("a");
			t5 = text("contato@mz.dev.br");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-mcvuxn\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			p0 = claim_element(nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t1 = claim_text(p0_nodes, "O site está em manutenção. Nos próximos dias estará 100%");
			p0_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			br = claim_element(nodes, "BR", {});
			t3 = claim_space(nodes);
			p1 = claim_element(nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t4 = claim_text(p1_nodes, "Entre em contato através do e-mail: ");
			a = claim_element(p1_nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			t5 = claim_text(a_nodes, "contato@mz.dev.br");
			a_nodes.forEach(detach_dev);
			p1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Contato";
			attr_dev(p0, "class", "svelte-tzuc7l");
			add_location(p0, file, 7, 0, 75);
			add_location(br, file, 8, 0, 139);
			attr_dev(a, "href", "mailto:contato@mz.dev.br");
			attr_dev(a, "class", "text-blue-400");
			add_location(a, file, 10, 38, 188);
			attr_dev(p1, "class", "svelte-tzuc7l");
			add_location(p1, file, 9, 0, 146);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, p0, anchor);
			append_dev(p0, t1);
			insert_dev(target, t2, anchor);
			insert_dev(target, br, anchor);
			insert_dev(target, t3, anchor);
			insert_dev(target, p1, anchor);
			append_dev(p1, t4);
			append_dev(p1, a);
			append_dev(a, t5);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(p0);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(br);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(p1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Contact", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Contact> was created with unknown prop '${key}'`);
	});

	return [];
}

class Contact extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Contact",
			options,
			id: create_fragment.name
		});
	}
}

export default Contact;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGFjdC5hZjk4NmVmMy5qcyIsInNvdXJjZXMiOltdLCJzb3VyY2VzQ29udGVudCI6W10sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
