import { S as SvelteComponentDev, f as init, j as safe_not_equal, k as dispatch_dev, v as validate_slots, r as space, p as element, q as text, a2 as query_selector_all, A as detach_dev, B as claim_space, x as claim_element, y as children, z as claim_text, D as attr_dev, E as add_location, F as insert_dev, G as append_dev, U as noop } from './client.66119302.js';

/* src/routes/skills.svelte generated by Svelte v3.32.3 */

const file = "src/routes/skills.svelte";

function create_fragment(ctx) {
	let title_value;
	let t0;
	let p;
	let t1;
	document.title = title_value = /*title*/ ctx[0];

	const block = {
		c: function create() {
			t0 = space();
			p = element("p");
			t1 = text(/*title*/ ctx[0]);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1258swp\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			p = claim_element(nodes, "P", { class: true });
			var p_nodes = children(p);
			t1 = claim_text(p_nodes, /*title*/ ctx[0]);
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(p, "class", "svelte-tzuc7l");
			add_location(p, file, 8, 0, 99);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, p, anchor);
			append_dev(p, t1);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*title*/ 1 && title_value !== (title_value = /*title*/ ctx[0])) {
				document.title = title_value;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(p);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Skills", slots, []);
	let title = "Skills";
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Skills> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ title });

	$$self.$inject_state = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [title];
}

class Skills extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Skills",
			options,
			id: create_fragment.name
		});
	}
}

export default Skills;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tpbGxzLjNiMmRmY2ZkLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL3NraWxscy5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbiAgbGV0IHRpdGxlID0gXCJTa2lsbHNcIjtcbjwvc2NyaXB0PlxuXG48c3ZlbHRlOmhlYWQ+XG4gIDx0aXRsZT57dGl0bGV9PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxwPnt0aXRsZX08L3A+XG5cbjxzdHlsZSBsYW5nPVwicG9zdGNzc1wiPlxuICBwIHtcbiAgICBAYXBwbHkgdGV4dC1jZW50ZXIgbXktMCBteC1hdXRvO1xuICB9XG48L3N0eWxlPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OzBDQUtVLEdBQUs7Ozs7Ozt1QkFHWCxHQUFLOzs7Ozs7Ozs7c0NBQUwsR0FBSzs7Ozs7Ozs7Ozs7Ozs7dUVBSEMsR0FBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FKVCxLQUFLLEdBQUcsUUFBUTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
