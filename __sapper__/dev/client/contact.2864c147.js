import { S as SvelteComponentDev, f as init, j as safe_not_equal, k as dispatch_dev, v as validate_slots, n as globals, l as binding_callbacks, m as bind, r as space, p as element, q as text, u as svg_element, w as create_component, a2 as query_selector_all, A as detach_dev, B as claim_space, x as claim_element, y as children, z as claim_text, C as claim_component, D as attr_dev, E as add_location, F as insert_dev, G as append_dev, H as set_input_value, I as mount_component, J as listen_dev, K as prevent_default, L as add_flush_callback, M as transition_in, N as transition_out, O as destroy_component, P as run_all } from './client.41688362.js';
import { M as MaskInput, m as marked } from './MaskInput.c88f1313.js';

/* src/routes/contact.svelte generated by Svelte v3.32.3 */

const { console: console_1 } = globals;
const file = "src/routes/contact.svelte";

function create_fragment(ctx) {
	let t0;
	let p0;
	let t1;
	let t2;
	let br;
	let t3;
	let div23;
	let div22;
	let div21;
	let div20;
	let div2;
	let div0;
	let t4;
	let t5;
	let div1;
	let h2;
	let t6;
	let t7;
	let p1;
	let t8;
	let span;
	let t9;
	let t10;
	let t11;
	let div19;
	let div18;
	let form;
	let div15;
	let div5;
	let label0;
	let t12;
	let t13;
	let div4;
	let div3;
	let svg0;
	let path0;
	let t14;
	let input0;
	let t15;
	let div8;
	let label1;
	let t16;
	let t17;
	let div7;
	let div6;
	let svg1;
	let path1;
	let t18;
	let input1;
	let t19;
	let div11;
	let label2;
	let t20;
	let t21;
	let div10;
	let div9;
	let svg2;
	let path2;
	let t22;
	let maskinput;
	let updating_value;
	let t23;
	let div14;
	let label3;
	let t24;
	let t25;
	let div13;
	let div12;
	let svg3;
	let path3;
	let t26;
	let input2;
	let t27;
	let div16;
	let label4;
	let t28;
	let t29;
	let textarea;
	let t30;
	let div17;
	let button0;
	let svg4;
	let path4;
	let t31;
	let t32;
	let button1;
	let t33;
	let current;
	let mounted;
	let dispose;

	function maskinput_value_binding(value) {
		/*maskinput_value_binding*/ ctx[8](value);
	}

	let maskinput_props = {
		mask: "00 00000 - 0000",
		type: "text",
		class: "w-11/12 sm:text-sm focus:outline-none focus:text-gray-600 p-2",
		placeholder: "(XX) XXXXX - XXXX",
		required: true
	};

	if (/*dados*/ ctx[1].telefone !== void 0) {
		maskinput_props.value = /*dados*/ ctx[1].telefone;
	}

	maskinput = new MaskInput({ props: maskinput_props, $$inline: true });
	binding_callbacks.push(() => bind(maskinput, "value", maskinput_value_binding));

	const block = {
		c: function create() {
			t0 = space();
			p0 = element("p");
			t1 = text("O site está em manutenção. Nos próximos dias estará 100%");
			t2 = space();
			br = element("br");
			t3 = space();
			div23 = element("div");
			div22 = element("div");
			div21 = element("div");
			div20 = element("div");
			div2 = element("div");
			div0 = element("div");
			t4 = text("i");
			t5 = space();
			div1 = element("div");
			h2 = element("h2");
			t6 = text("Entre em contato");
			t7 = space();
			p1 = element("p");
			t8 = text("Preencha o formulário abaixo com todas as informações solicitadas.\n              Para receber uma resposta já com os valores, preencha o campo\n              ");
			span = element("span");
			t9 = text("mensagem");
			t10 = text(" com\n              o maior detalhamento possível");
			t11 = space();
			div19 = element("div");
			div18 = element("div");
			form = element("form");
			div15 = element("div");
			div5 = element("div");
			label0 = element("label");
			t12 = text("Nome");
			t13 = space();
			div4 = element("div");
			div3 = element("div");
			svg0 = svg_element("svg");
			path0 = svg_element("path");
			t14 = space();
			input0 = element("input");
			t15 = space();
			div8 = element("div");
			label1 = element("label");
			t16 = text("Email");
			t17 = space();
			div7 = element("div");
			div6 = element("div");
			svg1 = svg_element("svg");
			path1 = svg_element("path");
			t18 = space();
			input1 = element("input");
			t19 = space();
			div11 = element("div");
			label2 = element("label");
			t20 = text("Telefone Celular");
			t21 = space();
			div10 = element("div");
			div9 = element("div");
			svg2 = svg_element("svg");
			path2 = svg_element("path");
			t22 = space();
			create_component(maskinput.$$.fragment);
			t23 = space();
			div14 = element("div");
			label3 = element("label");
			t24 = text("Assunto");
			t25 = space();
			div13 = element("div");
			div12 = element("div");
			svg3 = svg_element("svg");
			path3 = svg_element("path");
			t26 = space();
			input2 = element("input");
			t27 = space();
			div16 = element("div");
			label4 = element("label");
			t28 = text("Mensagem");
			t29 = space();
			textarea = element("textarea");
			t30 = space();
			div17 = element("div");
			button0 = element("button");
			svg4 = svg_element("svg");
			path4 = svg_element("path");
			t31 = text(" Cancelar");
			t32 = space();
			button1 = element("button");
			t33 = text("Enviar");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-mcvuxn\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			p0 = claim_element(nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t1 = claim_text(p0_nodes, "O site está em manutenção. Nos próximos dias estará 100%");
			p0_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			br = claim_element(nodes, "BR", {});
			t3 = claim_space(nodes);
			div23 = claim_element(nodes, "DIV", { class: true });
			var div23_nodes = children(div23);
			div22 = claim_element(div23_nodes, "DIV", { class: true });
			var div22_nodes = children(div22);
			div21 = claim_element(div22_nodes, "DIV", { class: true });
			var div21_nodes = children(div21);
			div20 = claim_element(div21_nodes, "DIV", { class: true });
			var div20_nodes = children(div20);
			div2 = claim_element(div20_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t4 = claim_text(div0_nodes, "i");
			div0_nodes.forEach(detach_dev);
			t5 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h2 = claim_element(div1_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t6 = claim_text(h2_nodes, "Entre em contato");
			h2_nodes.forEach(detach_dev);
			t7 = claim_space(div1_nodes);
			p1 = claim_element(div1_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t8 = claim_text(p1_nodes, "Preencha o formulário abaixo com todas as informações solicitadas.\n              Para receber uma resposta já com os valores, preencha o campo\n              ");
			span = claim_element(p1_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t9 = claim_text(span_nodes, "mensagem");
			span_nodes.forEach(detach_dev);
			t10 = claim_text(p1_nodes, " com\n              o maior detalhamento possível");
			p1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t11 = claim_space(div20_nodes);
			div19 = claim_element(div20_nodes, "DIV", { class: true });
			var div19_nodes = children(div19);
			div18 = claim_element(div19_nodes, "DIV", { class: true });
			var div18_nodes = children(div18);
			form = claim_element(div18_nodes, "FORM", {});
			var form_nodes = children(form);
			div15 = claim_element(form_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			div5 = claim_element(div15_nodes, "DIV", {});
			var div5_nodes = children(div5);
			label0 = claim_element(div5_nodes, "LABEL", { class: true });
			var label0_nodes = children(label0);
			t12 = claim_text(label0_nodes, "Nome");
			label0_nodes.forEach(detach_dev);
			t13 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);

			svg0 = claim_element(
				div3_nodes,
				"svg",
				{
					fill: true,
					class: true,
					viewBox: true,
					stroke: true
				},
				1
			);

			var svg0_nodes = children(svg0);

			path0 = claim_element(
				svg0_nodes,
				"path",
				{
					"stroke-linecap": true,
					"stroke-linejoin": true,
					"stroke-width": true,
					d: true
				},
				1
			);

			children(path0).forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t14 = claim_space(div4_nodes);

			input0 = claim_element(div4_nodes, "INPUT", {
				type: true,
				class: true,
				placeholder: true
			});

			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t15 = claim_space(div15_nodes);
			div8 = claim_element(div15_nodes, "DIV", {});
			var div8_nodes = children(div8);
			label1 = claim_element(div8_nodes, "LABEL", { class: true });
			var label1_nodes = children(label1);
			t16 = claim_text(label1_nodes, "Email");
			label1_nodes.forEach(detach_dev);
			t17 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);

			svg1 = claim_element(
				div6_nodes,
				"svg",
				{
					fill: true,
					class: true,
					viewBox: true,
					stroke: true
				},
				1
			);

			var svg1_nodes = children(svg1);

			path1 = claim_element(
				svg1_nodes,
				"path",
				{
					"stroke-linecap": true,
					"stroke-linejoin": true,
					"stroke-width": true,
					d: true
				},
				1
			);

			children(path1).forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t18 = claim_space(div7_nodes);

			input1 = claim_element(div7_nodes, "INPUT", {
				type: true,
				class: true,
				placeholder: true,
				required: true
			});

			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			t19 = claim_space(div15_nodes);
			div11 = claim_element(div15_nodes, "DIV", {});
			var div11_nodes = children(div11);
			label2 = claim_element(div11_nodes, "LABEL", { class: true });
			var label2_nodes = children(label2);
			t20 = claim_text(label2_nodes, "Telefone Celular");
			label2_nodes.forEach(detach_dev);
			t21 = claim_space(div11_nodes);
			div10 = claim_element(div11_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);

			svg2 = claim_element(
				div9_nodes,
				"svg",
				{
					fill: true,
					class: true,
					viewBox: true,
					stroke: true
				},
				1
			);

			var svg2_nodes = children(svg2);

			path2 = claim_element(
				svg2_nodes,
				"path",
				{
					"stroke-linecap": true,
					"stroke-linejoin": true,
					"stroke-width": true,
					d: true
				},
				1
			);

			children(path2).forEach(detach_dev);
			svg2_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			t22 = claim_space(div10_nodes);
			claim_component(maskinput.$$.fragment, div10_nodes);
			div10_nodes.forEach(detach_dev);
			div11_nodes.forEach(detach_dev);
			t23 = claim_space(div15_nodes);
			div14 = claim_element(div15_nodes, "DIV", {});
			var div14_nodes = children(div14);
			label3 = claim_element(div14_nodes, "LABEL", { class: true });
			var label3_nodes = children(label3);
			t24 = claim_text(label3_nodes, "Assunto");
			label3_nodes.forEach(detach_dev);
			t25 = claim_space(div14_nodes);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			div12 = claim_element(div13_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);

			svg3 = claim_element(
				div12_nodes,
				"svg",
				{
					fill: true,
					class: true,
					viewBox: true,
					stroke: true
				},
				1
			);

			var svg3_nodes = children(svg3);
			path3 = claim_element(svg3_nodes, "path", { "stroke-width": true, d: true }, 1);
			children(path3).forEach(detach_dev);
			svg3_nodes.forEach(detach_dev);
			div12_nodes.forEach(detach_dev);
			t26 = claim_space(div13_nodes);

			input2 = claim_element(div13_nodes, "INPUT", {
				type: true,
				class: true,
				placeholder: true
			});

			div13_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			div15_nodes.forEach(detach_dev);
			t27 = claim_space(form_nodes);
			div16 = claim_element(form_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);
			label4 = claim_element(div16_nodes, "LABEL", { class: true });
			var label4_nodes = children(label4);
			t28 = claim_text(label4_nodes, "Mensagem");
			label4_nodes.forEach(detach_dev);
			t29 = claim_space(div16_nodes);

			textarea = claim_element(div16_nodes, "TEXTAREA", {
				type: true,
				rows: true,
				required: true,
				class: true,
				placeholder: true
			});

			children(textarea).forEach(detach_dev);
			div16_nodes.forEach(detach_dev);
			t30 = claim_space(form_nodes);
			div17 = claim_element(form_nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			button0 = claim_element(div17_nodes, "BUTTON", { type: true, class: true });
			var button0_nodes = children(button0);

			svg4 = claim_element(
				button0_nodes,
				"svg",
				{
					class: true,
					fill: true,
					stroke: true,
					viewBox: true,
					xmlns: true
				},
				1
			);

			var svg4_nodes = children(svg4);

			path4 = claim_element(
				svg4_nodes,
				"path",
				{
					"stroke-linecap": true,
					"stroke-linejoin": true,
					"stroke-width": true,
					d: true
				},
				1
			);

			children(path4).forEach(detach_dev);
			svg4_nodes.forEach(detach_dev);
			t31 = claim_text(button0_nodes, " Cancelar");
			button0_nodes.forEach(detach_dev);
			t32 = claim_space(div17_nodes);
			button1 = claim_element(div17_nodes, "BUTTON", { type: true, class: true });
			var button1_nodes = children(button1);
			t33 = claim_text(button1_nodes, "Enviar");
			button1_nodes.forEach(detach_dev);
			div17_nodes.forEach(detach_dev);
			form_nodes.forEach(detach_dev);
			div18_nodes.forEach(detach_dev);
			div19_nodes.forEach(detach_dev);
			div20_nodes.forEach(detach_dev);
			div21_nodes.forEach(detach_dev);
			div22_nodes.forEach(detach_dev);
			div23_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Contato";
			attr_dev(p0, "class", "svelte-tzuc7l");
			add_location(p0, file, 47, 0, 907);
			add_location(br, file, 48, 0, 971);
			attr_dev(div0, "class", "h-14 w-14 bg-yellow-200 rounded-full flex flex-shrink-0 justify-center items-center text-yellow-500 text-2xl font-mono");
			add_location(div0, file, 55, 10, 1257);
			attr_dev(h2, "class", "leading-relaxed");
			add_location(h2, file, 63, 12, 1561);
			attr_dev(span, "class", "rounded border border-red-300 p-1");
			add_location(span, file, 67, 14, 1856);
			attr_dev(p1, "class", "text-sm text-gray-500 font-normal leading-relaxed svelte-tzuc7l");
			add_location(p1, file, 64, 12, 1623);
			attr_dev(div1, "class", "block pl-2 font-semibold text-xl self-start text-gray-700");
			add_location(div1, file, 60, 10, 1454);
			attr_dev(div2, "class", "flex items-center space-x-5");
			add_location(div2, file, 54, 8, 1205);
			attr_dev(label0, "class", "text-sm text-gray-400");
			add_location(label0, file, 79, 18, 2344);
			attr_dev(path0, "stroke-linecap", "round");
			attr_dev(path0, "stroke-linejoin", "round");
			attr_dev(path0, "stroke-width", "2");
			attr_dev(path0, "d", "M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z");
			add_location(path0, file, 88, 24, 2769);
			attr_dev(svg0, "fill", "none");
			attr_dev(svg0, "class", "w-6 text-gray-400 mx-auto");
			attr_dev(svg0, "viewBox", "0 0 24 24");
			attr_dev(svg0, "stroke", "currentColor");
			add_location(svg0, file, 82, 22, 2532);
			attr_dev(div3, "class", "w-1/12 pt-2 bg-gray-100");
			add_location(div3, file, 81, 20, 2472);
			attr_dev(input0, "type", "text");
			attr_dev(input0, "class", "w-11/12 sm:text-sm focus:ring-4 focus:outline-none focus:ring-green-500 focus:ring-opacity-50 p-2");
			attr_dev(input0, "placeholder", "Seu Nome Aqui");
			add_location(input0, file, 96, 20, 3118);
			attr_dev(div4, "class", "w-full inline-flex border");
			add_location(div4, file, 80, 18, 2412);
			add_location(div5, file, 78, 16, 2320);
			attr_dev(label1, "class", "text-sm text-gray-400");
			add_location(label1, file, 105, 18, 3494);
			attr_dev(path1, "stroke-linecap", "round");
			attr_dev(path1, "stroke-linejoin", "round");
			attr_dev(path1, "stroke-width", "2");
			attr_dev(path1, "d", "M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z");
			add_location(path1, file, 114, 24, 3934);
			attr_dev(svg1, "fill", "none");
			attr_dev(svg1, "class", "w-6 text-gray-400 mx-auto");
			attr_dev(svg1, "viewBox", "0 0 24 24");
			attr_dev(svg1, "stroke", "currentColor");
			add_location(svg1, file, 108, 22, 3697);
			attr_dev(div6, "class", "pt-2 w-1/12 bg-gray-100 bg-opacity-50");
			add_location(div6, file, 107, 20, 3623);
			attr_dev(input1, "type", "email");
			attr_dev(input1, "class", "w-11/12 sm:text-sm focus:outline-none focus:text-gray-600 p-2");
			attr_dev(input1, "placeholder", "email@examplo.com.br");
			input1.required = true;
			add_location(input1, file, 122, 20, 4316);
			attr_dev(div7, "class", "w-full inline-flex border");
			add_location(div7, file, 106, 18, 3563);
			add_location(div8, file, 104, 16, 3470);
			attr_dev(label2, "class", "text-sm text-gray-400");
			add_location(label2, file, 132, 18, 4696);
			attr_dev(path2, "stroke-linecap", "round");
			attr_dev(path2, "stroke-linejoin", "round");
			attr_dev(path2, "stroke-width", "2");
			attr_dev(path2, "d", "M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z");
			add_location(path2, file, 141, 24, 5133);
			attr_dev(svg2, "fill", "none");
			attr_dev(svg2, "class", "w-6 text-gray-400 mx-auto");
			attr_dev(svg2, "viewBox", "0 0 24 24");
			attr_dev(svg2, "stroke", "currentColor");
			add_location(svg2, file, 135, 22, 4896);
			attr_dev(div9, "class", "pt-2 w-1/12 bg-gray-100");
			add_location(div9, file, 134, 20, 4836);
			attr_dev(div10, "class", "w-full inline-flex border");
			add_location(div10, file, 133, 18, 4776);
			add_location(div11, file, 131, 16, 4672);
			attr_dev(label3, "class", "text-sm text-gray-400");
			add_location(label3, file, 160, 18, 5918);
			attr_dev(path3, "stroke-width", "5");
			attr_dev(path3, "d", "m408 0h-336c-39.746094.0429688-71.9570312 32.253906-72 72v208c.0429688 39.746094 32.253906 71.957031 72 72h22.238281l-14.078125 70.398438c-.605468 3.027343.585938 6.128906 3.054688 7.976562s5.78125 2.109375 8.511718.671875l150.25-79.046875h166.023438c39.746094-.042969 71.957031-32.253906 72-72v-208c-.042969-39.746094-32.253906-71.9570312-72-72zm56 280c-.035156 30.914062-25.085938 55.964844-56 56h-168c-1.300781 0-2.578125.316406-3.726562.921875l-137.128907 72.175781 12.695313-63.496094c.480468-2.355468-.121094-4.800781-1.640625-6.660156-1.519531-1.863281-3.796875-2.941406-6.199219-2.941406h-32c-30.914062-.035156-55.964844-25.085938-56-56v-208c.035156-30.914062 25.085938-55.964844 56-56h336c30.914062.035156 55.964844 25.085938 56 56zm0 0");
			add_location(path3, file, 169, 24, 6342);
			attr_dev(svg3, "fill", "none");
			attr_dev(svg3, "class", "w-6 text-gray-400 mx-auto");
			attr_dev(svg3, "viewBox", "0 -24 480 480");
			attr_dev(svg3, "stroke", "gray");
			add_location(svg3, file, 163, 22, 6109);
			attr_dev(div12, "class", "w-1/12 pt-2 bg-gray-100");
			add_location(div12, file, 162, 20, 6049);
			attr_dev(input2, "type", "text");
			attr_dev(input2, "class", "w-11/12 sm:text-sm focus:outline-none focus:text-gray-600 p-2");
			attr_dev(input2, "placeholder", "Assunto");
			add_location(input2, file, 175, 20, 7270);
			attr_dev(div13, "class", "w-full inline-flex border");
			add_location(div13, file, 161, 18, 5989);
			add_location(div14, file, 159, 16, 5894);
			attr_dev(div15, "class", "grid grid-cols-1 md:grid-cols-2 gap-4");
			add_location(div15, file, 77, 14, 2252);
			attr_dev(label4, "class", "text-sm text-gray-400");
			add_location(label4, file, 186, 16, 7641);
			attr_dev(textarea, "type", "text");
			attr_dev(textarea, "rows", "4");
			textarea.required = true;
			attr_dev(textarea, "class", "px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none focus:text-gray-600");
			attr_dev(textarea, "placeholder", "Descreva com o maior detalhe possível sobre o serviço");
			add_location(textarea, file, 187, 16, 7711);
			attr_dev(div16, "class", "flex flex-col");
			add_location(div16, file, 185, 14, 7597);
			attr_dev(path4, "stroke-linecap", "round");
			attr_dev(path4, "stroke-linejoin", "round");
			attr_dev(path4, "stroke-width", "2");
			attr_dev(path4, "d", "M6 18L18 6M6 6l12 12");
			add_location(path4, file, 209, 21, 8695);
			attr_dev(svg4, "class", "w-6 h-6 mr-3");
			attr_dev(svg4, "fill", "none");
			attr_dev(svg4, "stroke", "currentColor");
			attr_dev(svg4, "viewBox", "0 0 24 24");
			attr_dev(svg4, "xmlns", "http://www.w3.org/2000/svg");
			add_location(svg4, file, 203, 18, 8459);
			attr_dev(button0, "type", "cancel");
			attr_dev(button0, "class", "flex justify-center items-center w-full text-gray-900 px-4 py-3 rounded-md focus:outline-none");
			add_location(button0, file, 198, 16, 8224);
			attr_dev(button1, "type", "submit");
			attr_dev(button1, "class", "bg-blue-500 flex justify-center items-center w-full text-white px-4 py-3 rounded-md focus:outline-none");
			add_location(button1, file, 217, 16, 8977);
			attr_dev(div17, "class", "pt-4 flex items-center space-x-4");
			add_location(div17, file, 197, 14, 8161);
			add_location(form, file, 76, 12, 2196);
			attr_dev(div18, "class", "py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7");
			add_location(div18, file, 73, 10, 2074);
			attr_dev(div19, "class", "divide-y divide-gray-200");
			add_location(div19, file, 72, 8, 2025);
			attr_dev(div20, "class", "max-w-md mx-auto");
			add_location(div20, file, 53, 6, 1166);
			attr_dev(div21, "class", "relative px-4 py-10 rounded-2xl md:mx-0 sm:p-10");
			add_location(div21, file, 52, 4, 1098);
			attr_dev(div22, "class", "relative sm:max-w-xl sm:mx-auto");
			add_location(div22, file, 51, 2, 1048);
			attr_dev(div23, "class", "bg-gray-100 flex rounded-2xl flex-col justify-center");
			add_location(div23, file, 50, 0, 979);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, p0, anchor);
			append_dev(p0, t1);
			insert_dev(target, t2, anchor);
			insert_dev(target, br, anchor);
			insert_dev(target, t3, anchor);
			insert_dev(target, div23, anchor);
			append_dev(div23, div22);
			append_dev(div22, div21);
			append_dev(div21, div20);
			append_dev(div20, div2);
			append_dev(div2, div0);
			append_dev(div0, t4);
			append_dev(div2, t5);
			append_dev(div2, div1);
			append_dev(div1, h2);
			append_dev(h2, t6);
			append_dev(div1, t7);
			append_dev(div1, p1);
			append_dev(p1, t8);
			append_dev(p1, span);
			append_dev(span, t9);
			append_dev(p1, t10);
			append_dev(div20, t11);
			append_dev(div20, div19);
			append_dev(div19, div18);
			append_dev(div18, form);
			append_dev(form, div15);
			append_dev(div15, div5);
			append_dev(div5, label0);
			append_dev(label0, t12);
			append_dev(div5, t13);
			append_dev(div5, div4);
			append_dev(div4, div3);
			append_dev(div3, svg0);
			append_dev(svg0, path0);
			append_dev(div4, t14);
			append_dev(div4, input0);
			set_input_value(input0, /*dados*/ ctx[1].nome);
			append_dev(div15, t15);
			append_dev(div15, div8);
			append_dev(div8, label1);
			append_dev(label1, t16);
			append_dev(div8, t17);
			append_dev(div8, div7);
			append_dev(div7, div6);
			append_dev(div6, svg1);
			append_dev(svg1, path1);
			append_dev(div7, t18);
			append_dev(div7, input1);
			set_input_value(input1, /*dados*/ ctx[1].email);
			append_dev(div15, t19);
			append_dev(div15, div11);
			append_dev(div11, label2);
			append_dev(label2, t20);
			append_dev(div11, t21);
			append_dev(div11, div10);
			append_dev(div10, div9);
			append_dev(div9, svg2);
			append_dev(svg2, path2);
			append_dev(div10, t22);
			mount_component(maskinput, div10, null);
			append_dev(div15, t23);
			append_dev(div15, div14);
			append_dev(div14, label3);
			append_dev(label3, t24);
			append_dev(div14, t25);
			append_dev(div14, div13);
			append_dev(div13, div12);
			append_dev(div12, svg3);
			append_dev(svg3, path3);
			append_dev(div13, t26);
			append_dev(div13, input2);
			set_input_value(input2, /*assunto*/ ctx[0]);
			append_dev(form, t27);
			append_dev(form, div16);
			append_dev(div16, label4);
			append_dev(label4, t28);
			append_dev(div16, t29);
			append_dev(div16, textarea);
			set_input_value(textarea, /*dados*/ ctx[1].mensagem);
			append_dev(form, t30);
			append_dev(form, div17);
			append_dev(div17, button0);
			append_dev(button0, svg4);
			append_dev(svg4, path4);
			append_dev(button0, t31);
			append_dev(div17, t32);
			append_dev(div17, button1);
			append_dev(button1, t33);
			current = true;

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", /*input0_input_handler*/ ctx[6]),
					listen_dev(input1, "input", /*input1_input_handler*/ ctx[7]),
					listen_dev(input2, "input", /*input2_input_handler*/ ctx[9]),
					listen_dev(textarea, "input", /*textarea_input_handler*/ ctx[10]),
					listen_dev(button0, "click", /*_onCancel*/ ctx[2], false, false, false),
					listen_dev(form, "submit", prevent_default(/*_onOkay*/ ctx[3]), false, true, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*dados*/ 2 && input0.value !== /*dados*/ ctx[1].nome) {
				set_input_value(input0, /*dados*/ ctx[1].nome);
			}

			if (dirty & /*dados*/ 2 && input1.value !== /*dados*/ ctx[1].email) {
				set_input_value(input1, /*dados*/ ctx[1].email);
			}

			const maskinput_changes = {};

			if (!updating_value && dirty & /*dados*/ 2) {
				updating_value = true;
				maskinput_changes.value = /*dados*/ ctx[1].telefone;
				add_flush_callback(() => updating_value = false);
			}

			maskinput.$set(maskinput_changes);

			if (dirty & /*assunto*/ 1 && input2.value !== /*assunto*/ ctx[0]) {
				set_input_value(input2, /*assunto*/ ctx[0]);
			}

			if (dirty & /*dados*/ 2) {
				set_input_value(textarea, /*dados*/ ctx[1].mensagem);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(maskinput.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(maskinput.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(p0);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(br);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(div23);
			destroy_component(maskinput);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Contact", slots, []);
	let { assunto = "" } = $$props;
	require("dotenv").config();
	let value = "";
	let nome, email, telefone, mensagem;
	let dados = { nome, email, telefone, assunto, mensagem };

	let { onCancel = () => {
		
	} } = $$props;

	let { onOkay = () => {
		$$invalidate(1, dados.mensagem = marked(dados.mensagem), dados);
		console.log(dados);

		fetch(process.env.BACKEND, {
			method: "POST",
			body: JSON.stringify(dados),
			headers: {
				Accept: "application/json",
				"Content-type": "application/json; charset=UTF-8"
			}
		}).then(response => {
			if (response.ok) {
				console.log("FOI!");
			}
		});
	} } = $$props;

	function _onCancel() {
		onCancel();
	}

	function _onOkay() {
		onOkay(value);
	}

	const writable_props = ["assunto", "onCancel", "onOkay"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Contact> was created with unknown prop '${key}'`);
	});

	function input0_input_handler() {
		dados.nome = this.value;
		$$invalidate(1, dados);
	}

	function input1_input_handler() {
		dados.email = this.value;
		$$invalidate(1, dados);
	}

	function maskinput_value_binding(value) {
		if ($$self.$$.not_equal(dados.telefone, value)) {
			dados.telefone = value;
			$$invalidate(1, dados);
		}
	}

	function input2_input_handler() {
		assunto = this.value;
		$$invalidate(0, assunto);
	}

	function textarea_input_handler() {
		dados.mensagem = this.value;
		$$invalidate(1, dados);
	}

	$$self.$$set = $$props => {
		if ("assunto" in $$props) $$invalidate(0, assunto = $$props.assunto);
		if ("onCancel" in $$props) $$invalidate(4, onCancel = $$props.onCancel);
		if ("onOkay" in $$props) $$invalidate(5, onOkay = $$props.onOkay);
	};

	$$self.$capture_state = () => ({
		marked,
		assunto,
		MaskInput,
		value,
		nome,
		email,
		telefone,
		mensagem,
		dados,
		onCancel,
		onOkay,
		_onCancel,
		_onOkay
	});

	$$self.$inject_state = $$props => {
		if ("assunto" in $$props) $$invalidate(0, assunto = $$props.assunto);
		if ("value" in $$props) value = $$props.value;
		if ("nome" in $$props) nome = $$props.nome;
		if ("email" in $$props) email = $$props.email;
		if ("telefone" in $$props) telefone = $$props.telefone;
		if ("mensagem" in $$props) mensagem = $$props.mensagem;
		if ("dados" in $$props) $$invalidate(1, dados = $$props.dados);
		if ("onCancel" in $$props) $$invalidate(4, onCancel = $$props.onCancel);
		if ("onOkay" in $$props) $$invalidate(5, onOkay = $$props.onOkay);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		assunto,
		dados,
		_onCancel,
		_onOkay,
		onCancel,
		onOkay,
		input0_input_handler,
		input1_input_handler,
		maskinput_value_binding,
		input2_input_handler,
		textarea_input_handler
	];
}

class Contact extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { assunto: 0, onCancel: 4, onOkay: 5 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Contact",
			options,
			id: create_fragment.name
		});
	}

	get assunto() {
		throw new Error("<Contact>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set assunto(value) {
		throw new Error("<Contact>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onCancel() {
		throw new Error("<Contact>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onCancel(value) {
		throw new Error("<Contact>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get onOkay() {
		throw new Error("<Contact>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set onOkay(value) {
		throw new Error("<Contact>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Contact;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
